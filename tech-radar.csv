name;ring;quadrant;isNew;description;;;
;;;;;;;
.NET Core;Adopt;Platforms;TRUE;"<p><a href=""https://dotnet.microsoft.com/"">.NET Core</a> is a cross-platform .NET implementation for websites, servers, and console apps on Windows, Linux, and macOS.</p>";;;
Airflow;Trial;Platforms;FALSE;"<p><a href=""https://airflow.apache.org/"">Apache Airflow:</a> Airflow is a platform created by community to programmatically author, schedule and monitor workflows.</p>";;;
CI/CD;Assess;Techniques;TRUE;<p>CI/CD or CICD generally refers to the combined practices of continuous integration and continuous delivery</p>;;;
.NET Framework;Hold;Platforms;TRUE;<p>.NET Framework supports websites; services; desktop apps; and more on Windows.</p>
Apache Atlas;Assess;Platforms;TRUE;;;;
Apache Kafka;Trial;Tools;TRUE;;;;
Apache Spark;Adopt;Languages & Frameworks;TRUE;;;;
APIs as a product;Trial;Techniques;TRUE;;;;
Automated machine learning (AutoML);Trial;Techniques;TRUE;"<p>The power and promise of machine learning has created a demand for expertise that outstrips the supply of data scientists who specialize in this area. In response to this skills gap, we've seen the emergence of <strong>Automated machine learning (AutoML)</strong> tools that purport to make it easy for nonexperts to automate the end-to-end process of model selection and training. Examples include <a href=""https://cloud.google.com/automl/"">Google's AutoML</a>, <a href=""https://www.datarobot.com"">DataRobot</a> and <a href=""http://docs.h2o.ai/h2o/latest-stable/h2o-docs/automl.html"">the H2O AutoML interface</a>. Although we've seen promising results from these tools, we'd caution businesses against viewing them as the sum total of their machine-learning journey. As stated on the <a href=""http://docs.h2o.ai/h2o/latest-stable/h2o-docs/automl.html"">H2O website</a>, ""there is still a fair bit of knowledge and background in data science that is required to produce high-performing machine learning models."" Blind trust in automated techniques also increases the risk of introducing ethical bias or making decisions that disadvantage minorities. While businesses may use these tools as a starting point to generate useful, trained models, we encourage them to seek out experienced data scientists to validate and refine the results.</p>";;;
BFF - Backend for frontends;Trial;Techniques;TRUE;;;;
BPNM;Hold;Techniques;TRUE;;;;
Ceph;Trial;Platforms;TRUE;;;;
Cilium;Assess;Tools;TRUE;;;;
CloudEvents;Assess;Platforms;TRUE;;;;
Data mesh;Trial;Techniques;FALSE;"<p><strong><a href=""https://martinfowler.com/articles/data-monolith-to-mesh.html"">Data mesh</a></strong> is an architectural paradigm that unlocks analytical data at scale; rapidly unlocking access to an ever-growing number of distributed domain data sets, for a proliferation of consumption scenarios such as machine learning, analytics or data intensive applications across the organization. Data mesh addresses the common failure modes of the traditional centralized <a href=""https://martinfowler.com/bliki/DataLake.html"">data lake</a> or data platform architecture, with a shift from the centralized paradigm of a lake, or its predecessor, the data warehouse. Data mesh shifts to a paradigm that draws from modern distributed architecture: considering domains as the first-class concern, applying platform thinking to create a self-serve data infrastructure, treating data as a product and implementing open standardization to enable an ecosystem of interoperable distributed data products.</p>";;;
Debezium;Trial;Platforms;TRUE;;;;
Kubernetes patterns;Trial;Techniques;TRUE;;;;
Design Thinking;Assess;Techniques;TRUE;;;;
DevOps;Adopt;Techniques;TRUE;;;;
DevSecOps;Trial;Techniques;TRUE;;;;
Docker;Adopt;Platforms;TRUE;;;;
Domain-Driven Design;Trial;Techniques;TRUE;;;;
Elastic;Trial;Platforms;TRUE;;;;
Envoy;Trial;Platforms;TRUE;;;;
etcd;Adopt;Platforms;TRUE;;;;
Event Sourcing;Assess;Techniques;TRUE;;;;
Event Storming;Adopt;Techniques;TRUE;;;;
Federated learning;Assess;Techniques;TRUE;"<p>Model training generally requires collecting data from its source and transporting it to a centralized location where the model training algorithm runs. This becomes particularly problematic when the training data consists of personally identifiable information. We're encouraged by the emergence of <strong>federated learning</strong> as a privacy-preserving method for training on a large diverse set of data relating to individuals. Federated learning techniques allow the data to remain on the users' device, under their control, yet contribute to an aggregate corpus of training data. In one such technique, each user device updates a model independently; then the model parameters, rather than the data itself, are combined into a centralized view. Network bandwidth and device computational limitations present some significant technical challenges, but we like the way federated learning leaves users in control of their own personal information.</p>";;;
Figma;Trial;Tools;TRUE;"<p>One of the great pain points in interaction and visual design is the lack of tools built for collaboration. This is where <strong><a href=""https://www.figma.com/"">Figma</a></strong> comes in. It has the same functionalities of design programs such as Sketch and Invision, but by being able to collaborate with another person at the same time, it helps you discover new ideas together with real-time collaboration capabilities. Our teams find Figma very useful, especially in remote and distributed design work enablement and facilitation. In addition to its collaboration capabilities, Figma also offers an API that helps to improve the <a href=""https://www.thoughtworks.com/radar/techniques/designops"">DesignOps</a> process.</p>";;;
Fluentd;Trial;Tools;TRUE;;;;
Git;Adopt;Tools;TRUE;;;;
GitLab;Adopt;Platforms;TRUE;;;;
Go;Assess;Languages & Frameworks;TRUE;;;;
Grafana;Adopt;Tools;TRUE;;;;
GraphQL;Assess;Languages & Frameworks;TRUE;"<p>We've seen many successful <strong><a href=""https://github.com/facebook/graphql"">GraphQL</a></strong> implementations on our projects. We've seen some interesting patterns of use too, including <a href=""https://www.thoughtworks.com/radar/techniques/graphql-for-server-side-resource-aggregation"">GraphQL for server-side resource aggregation</a>. That said, we've concerns about misuse of this framework and some of the problems that can occur. Examples include performance gotchas around N+1 queries and lots of boilerplate code needed when adding new models, leading to complexity. There are workarounds to these gotchas such as query caching. Even though it's not a silver bullet, we still think it's worth assessing as part of your architecture.</p>";;;
gVisor;Assess;Platforms;TRUE;;;;
HashiCorp Vault;Adopt;Tools;TRUE;;;;
Helm;Assess;Tools;FALSE;;;;
Istio;Trial;Platforms;TRUE;;;;
Jaeger;Trial;Tools;FALSE;;;;
Java;Hold;Languages & Frameworks;TRUE;;;;
Jupyter;Adopt;Tools;TRUE;;;;
Keycloak;Trial;Tools;TRUE;;;;
Knative;Assess;Platforms;TRUE;;;;
Kubeflow;Assess;Tools;TRUE;"<p><strong><a href=""https://www.kubeflow.org/"">Kubeflow</a></strong> is interesting for two reasons. First, it is an innovative use of <a href=""https://www.thoughtworks.com/radar/tools/kubernetes-operators"">Kubernetes Operators</a> which we've spotlighted in our April 2019 edition of the Radar. Second, it provides a way to encode and version machine-learning workflows so that they can be more easily ported from one execution environment to another. Kubeflow consists of several components, including Jupyter notebooks, data pipelines, and control tools. Several of these components are packaged as Kubernetes operators to draw on Kubernetes's ability to react to events generated by pods implementing various stages of the workflow. By packaging the individual programs and data as containers, entire workflows can be ported from one environment to another. This can be useful when moving a useful but computationally challenging workflow developed in the cloud to a custom supercomputer or tensor processing unit cluster.</p>";;;
Kubernetes;Adopt;Platforms;TRUE;;;;
Kustomize;Trial;Tools;FALSE;;;;
Loki;Trial;Tools;TRUE;"<p><strong><a href=""https://loki.js.org"">Loki</a></strong> is a visual regression tool that works with <a href=""https://storybook.js.org/"">Storybook</a>, which we mentioned previously in the context of <a href=""https://www.thoughtworks.com/radar/tools/ui-dev-environments"">UI dev environments</a>. With a few lines of configuration, Loki can be used to test all UI components. The preferred mode of operation is using Chrome in a Docker container as this avoids one-pixel differences when tests are run in nonidentical environments. Our experience has been that the tests are very stable, but updates to Storybook tend to cause tests to fail with minor differences. It also seems impossible to test components which use <code>position: fixed</code> but you can work around that by wrapping the component with a <code>fixed</code>.</p>";;;
Micro Frontends;Assess;Techniques;TRUE;"<p>We've seen significant benefits from introducing <a href=""https://martinfowler.com/articles/microservices.html"">microservices</a>, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create a front-end monolith — a large, entangled browser application that sits on top of the back-end services — largely neutralizing the benefits of microservices. <strong>Micro frontends</strong> have continued to gain in popularity since they were first introduced. We've seen many teams adopt some form of this architecture as a way to manage the complexity of multiple developers and teams contributing to the same user experience. In June of this year, one of the originators of this technique published an <a href=""https://martinfowler.com/articles/micro-frontends.html"">introductory article</a> that serves as a reference for micro frontends. It shows how this style can be implemented using various web programming mechanisms and builds out an example application using <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/react-js"">React.js</a>. We're confident this style will grow in popularity as larger organizations try to decompose UI development across multiple teams.</p>";;;
Microservices;Adopt;Techniques;TRUE;;;;
MLFlow;Trial;Tools;FALSE;;;;
MSSQL;Hold;Platforms;TRUE;;;;
Nexus;Adopt;Tools;FALSE;;;;
Open Policy Agent (OPA);Assess;Tools;TRUE;<p>Defining and enforcing security policies uniformly across a diverse technology landscape is a challenge. Even for simple applications, you have to control access to their components — such as container orchestrators, services and data stores to keep the services' state — using their components' built-in security policy configuration and enforcement mechanisms.</p>;;;
OpenAPI;Adopt;Languages & Frameworks;TRUE;;;;
OpenTracing;Trial;Platforms;TRUE;;;;
Oxygen SDK;Assess;Tools;TRUE;;;;
Packer;Assess;Tools;TRUE;;;;
Perl;Hold;Languages & Frameworks;TRUE;;;;
PHP;Hold;Languages & Frameworks;TRUE;;;;
Pipelines as code;Adopt;Techniques;TRUE;;;;
Pipelines for infrastructure as code;Trial;Techniques;TRUE;;;;
Postman;Trial;Tools;TRUE;;;;
Presto;Trial;Platforms;TRUE;;;;
Products over projects;Adopt;Techniques;TRUE;;;;
Progressive Web Applications;Trial;Techniques;TRUE;;;;
Prometheus;Trial;Tools;TRUE;;;;
Python 3;Adopt;Languages & Frameworks;TRUE;;;;
PyTorch;Assess;Languages & Frameworks;TRUE;;;;
Redmine;Hold;Platforms;TRUE;;;;
Rook;Trial;Platforms;TRUE;;;;
SASS;Assess;Languages & Frameworks;TRUE;;;;
Secrets as a service;Adopt;Techniques;TRUE;;;;
Sensu;Assess;Tools;TRUE;;;;
Sentry;Assess;Tools;FALSE;;;;
Serverless architecture;Trial;Techniques;TRUE;;;;
Service Mesh;Trial;Techniques;TRUE;;;;
Sidecars for endpoint security;Trial;Techniques;TRUE;"<p>Many of the technical solutions we build today run in increasingly complex <a href=""https://www.thoughtworks.com/radar/techniques/polycloud"">polycloud</a> or hybrid-cloud environments with multiple distributed components and services. Under such circumstances, we apply two security principles early in implementation: <em>zero trust network</em>, never trust the network and always verify; and the principle of <em>least privilege</em>, granting the minimum permissions necessary for performing a particular job. <strong>Sidecars for endpoint security</strong> is a common technique we use to implement these principles to enforce security controls at every component's endpoint, e.g., APIs of services, data stores or <a href=""https://www.thoughtworks.com/radar/platforms/kubernetes"">Kubernetes</a> control interface. We do this using an out-of-process sidecar — a process or a container that is deployed and scheduled with each service sharing the same execution context, host and identity. <a href=""https://www.thoughtworks.com/radar/tools/open-policy-agent-opa"">Open Policy Agent</a> and <a href=""http://github.com/envoyproxy/envoy"">Envoy</a> are tools that implement this technique. Sidecars for endpoint security minimize the trusted footprint to a local endpoint rather than the network perimeter. We like to see the responsibility of sidecar’s security policy configuration left with the team that is responsible for the endpoint and not a separate centralized team.</p>";;;
Skaffold;Assess;Tools;TRUE;"<p>Google brings us <strong><a href=""https://skaffold.dev/"">Skaffold</a></strong>, an open-source tool to automate local development workflows, including deployment on <a href=""https://www.thoughtworks.com/radar/platforms/kubernetes"">Kubernetes</a>. Skaffold detects changes in source code and triggers workflows to build, tag and deploy into a K8s cluster including capturing application logs back to the command line. The workflows are pluggable with different build and deployment tools, but this comes with an opinionated default configuration to make it easier to get started.</p>";;;
SPIFFE;Assess;Platforms;TRUE;;;;
Superset;Assess;Tools;TRUE;;;;
Swift;Hold;Languages & Frameworks;TRUE;;;;
Tableau;Trial;Tools;TRUE;;;;
Tensorflow;Trial;Languages & Frameworks;TRUE;"<p>With its 2.0 release, <strong><a href=""https://www.tensorflow.org/"">TensorFlow</a></strong> retains its prominence as the industry’s leading machine learning framework. TensorFlow began as a numerical processing package that gradually expanded to include libraries supporting a variety of ML approaches and execution environments, ranging from mobile CPU to large GPU clusters. Along the way, a slew of frameworks became available to simplify the tasks of network creation and training. At the same time, other frameworks, notably <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/pytorch"">PyTorch</a>, offered an imperative programming model that made debugging and execution simpler and easier. TensorFlow 2.0 now defaults to imperative flow (eager execution) and adopts <a href=""https://www.thoughtworks.com/radar/languages-and-frameworks/keras"">Keras</a> as the single high-level API. While these changes modernize TensorFlow's usability and make it more competitive with PyTorch, it is a significant rewrite that often breaks backward compatibility — many tools and serving frameworks in the TensorFlow ecosystem won't immediately work with the new version. For the time being, consider whether you want to design and experiment in TensorFlow 2.0 but revert to version 1 to serve and run your models in production.</p>";;;
Terraform;Trial;Tools;TRUE;;;;
TypeScript;Assess;Languages & Frameworks;TRUE;;;;
UML;Hold;Techniques;TRUE;;;;
VBA;Hold;Languages & Frameworks;TRUE;;;;
Visual Studio Code;Adopt;Tools;TRUE;;;;
Vitess;Assess;Platforms;TRUE;;;;
Xamarin/Mono;Adopt;Platforms;TRUE;Xamarin/Mono is a .NET implementation for running apps on all the major mobile operating systems.;;;
XML;Hold;Languages & Frameworks;TRUE;;;;
Zipkin;Trial;Tools;TRUE;;;;
Element;Assess;Languages & Frameworks;TRUE;"<p>A Desktop UI Library: <a href=""https://element.eleme.io"">Element</a>, a Vue 2.0 based component library for developers, designers and product managers</p>";;;
Webpack;Assess;Languages & Frameworks;TRUE;"<p><a href=""https://webpack.js.org"">Webpack</a>: Bundle your images.</p>";;;
Prisma;Assess;Languages & Frameworks;TRUE;"<p><a href=""https://prisma.io"">Prisma</a>: Prisma replaces traditional ORMs. Simplified & type-safe database acccess. Declaritive migrations & data modeling. Powerful & visual data management</p>";;;
Druid;Assess;Platforms;TRUE;"<p><a href=""https://druid.apache.org"">Druid:</a>Apache Druid is a high performance real-time analytics database.</p>";;;
Apache Hudi;Assess;Platforms;TRUE;;;;
Vue.js;Assess;Languages & Frameworks;TRUE;;;;
Aurelia;Assess;Languages & Frameworks;TRUE;;;;
Ruby;Hold;Languages & Frameworks;TRUE;;;;
Infoblox;Assess;Tools;TRUE;<p>Infoblox DDI for K8s CNI</p>;;;
Consul;Assess;Tools;TRUE;;;;
Infoblox;Assess;Tools;TRUE;"<p><a href=""https://github.com/infobloxopen/cni-infoblox"">Infoblox:</a> DDI > DHCP, DNS, IPAM</p>";;;
Kubeless;Assess;Platforms;TRUE;;;;
Velero;Assess;Tools;TRUE;"<p><a href=""https://velero.io"">Velero:</a> Velero is an open source tool to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.</p>";;;
NATS;Assess;Platforms;TRUE;"<p><a href=""https://nats.io/"">NATS:</a>NATS.io is a simple, secure and high performance open source messaging system for cloud native applications, IoT messaging, and microservices architectures.</p>";;;
Krew;Assess;Tools;TRUE;"<p><a href=""https://github.com/kubernetes-sigs/krew/"">Krew:</a>krew is the package manager for kubectl plugins.</p>";;;
D3.js;Assess;Languages & Frameworks;TRUE;"<p><a href=""https://d3js.org/"">D3.js</a>: Data-Driven Documents. D3.js is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG, and CSS. D3’s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.</p>";;;
KubeVirt;Assess;Platforms;TRUE;"<p><a href=""https://kubeless.io/"">Kubeless:</a>The Kubernetes Native Serverless Framework. Build advanced applications with FaaS on top of Kubernetes</p>";;;
Data Vault;Assess;Techniques;TRUE;;;;
Apache Ranger;Assess;Platforms;TRUE;;;;
Cross-Plattform development;Adopt;Techniques;TRUE;;;;
C#;Adopt;Languages & Frameworks;TRUE;;;;
Kibana;Trial;Tools;TRUE;;;;
Kiala;Assess;Tools;TRUE;;;;
Ansible;Assess;Tools;TRUE;;;;
Jenkins X;Assess;Tools;TRUE;;;;
Logstash;Assess;Tools;TRUE;;;;
VMware Tanzu;Assess;Platforms;TRUE;;;;
Open Source;Adopt;Techniques;TRUE;;;;
Prepros;Trial;Languages & Frameworks;TRUE;"<p><a href=""https://prepros.io/"">Prepros:</a> Prepros compiles your files, transpiles your JavaScript, reloads your browsers and makes it really easy to develop & test your websites so you can focus on making them perfect.</p>";;;
Dependency drift fitness function;Adopt;Techniques;TRUE;;;;
Distroless Docker images;Trial;Techniques;TRUE;;;;
Zero trust architecture;Trial;Techniques;TRUE;;;;
Micro frontend anarchy;Trial;Techniques;TRUE;;;;
Backstage;Trial;Platforms;TRUE;;;;
K3s;Adopt;Platforms;TRUE;;;;
Jupyter Enterprise Gateway;Assess;Platforms;TRUE;;;;
Amundsen;Trial;Tools;TRUE;;;;
Trust over IP stack;Assess;Platforms;TRUE;;;;
Tecton;Assess;Platforms;TRUE;;;;
Bitrise;Assess;Tools;TRUE;;;;
Trivy;Adopt;Tools;TRUE;;;;
Anchore;Hold;Tools;TRUE;;;;
SonarQube;Trial;Platforms;TRUE;;;;
Arrow;Trial;Languages & Frameworks;TRUE;;;;
Redis;Trial;Languages & Frameworks;TRUE;;;;
PostgreSQL;Adopt;Languages & Frameworks;TRUE;;;;
Openmetrics;Adopt;Languages & Frameworks;TRUE;;;;
Thanos;Hold;Tools;TRUE;;;;
Eclipse Che;Trial;Platforms;TRUE;;;;
Jenkins;Trial;Platforms;TRUE;;;;
Argo CD;Hold;Platforms;TRUE;;;;
Behavior Driven Testing;Trial;Techniques;TRUE;;;;
